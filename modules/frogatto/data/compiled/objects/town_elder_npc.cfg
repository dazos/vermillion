{
	"animation": [
		{
			"accel_x": 0,
			"accel_y": 80,
			"duration": 9,
			"frame_info": [5,7,4,3,467,117,37,38,5,8,4,3,504,117,37,37,4,9,2,3,541,117,40,36,5,8,2,3,581,117,39,37,5,7,2,3,620,117,39,38],
			"frames": 5,
			"id": "stand",
			"image": "compiled-2.png",
			"interact_area": "all",
			"rect": [462,110,507,157],
			"reverse": true
		},
		{
			"accel_x": 300,
			"accel_y": 80,
			"duration": 6,
			"frame_info": [3,7,0,3,158,39,43,38,5,7,1,3,201,39,40,38,6,7,3,2,241,39,37,39],
			"frames": 3,
			"id": "run_scared",
			"image": "compiled-2.png",
			"interact_area": "all",
			"rect": [155,32,200,79],
			"reverse": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"duration": 10,
			"frame_info": [5,7,4,3,393,117,37,38,5,7,4,3,430,117,37,38],
			"frames": 2,
			"id": "mutter_begin",
			"image": "compiled-2.png",
			"interact_area": "all",
			"rect": [388,110,433,157]
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"duration": 10,
			"frame_info": [5,7,4,3,263,117,37,38,4,7,4,3,300,117,38,38],
			"frames": 2,
			"id": "mutter",
			"image": "compiled-2.png",
			"interact_area": "all",
			"rect": [258,110,303,157]
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"duration": 7,
			"frame_info": [5,7,17,3,278,39,37,38,5,7,17,3,315,39,37,38,5,7,19,3,352,39,35,38,6,7,12,3,387,39,41,38,6,6,1,3,428,39,52,39,5,6,1,3,480,39,53,39,5,6,0,3,533,39,54,39,5,6,1,3,587,39,53,39],
			"frames": 8,
			"frames_per_row": 4,
			"id": "emote_caneshake",
			"image": "compiled-2.png",
			"interact_area": "all",
			"rect": [273,32,331,79],
			"reverse": true,
			"solid_area": [10,10,27,43]
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"duration": 9,
			"frame_info": [5,7,4,3,0,78,37,38,4,7,9,3,37,78,33,38,5,6,10,3,70,78,31,39,4,7,9,3,101,78,33,38,5,6,10,3,134,78,31,39],
			"frames": 5,
			"id": "emote_confused",
			"image": "compiled-2.png",
			"interact_area": "all",
			"rect": [-5,71,40,118],
			"reverse": true,
			"solid_area": [10,10,27,43]
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"duration": 9,
			"frame_info": [6,7,5,3,0,117,35,38,6,7,8,3,35,117,32,38,7,7,8,3,67,117,31,38,8,7,7,3,98,117,31,38,7,7,8,3,129,117,31,38],
			"frames": 5,
			"id": "emote_emphatic",
			"image": "compiled-2.png",
			"interact_area": "all",
			"rect": [-6,110,39,157],
			"reverse": true,
			"solid_area": [10,10,27,43]
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"duration": 7,
			"frame_info": [5,7,4,3,165,78,37,38,4,7,4,3,202,78,38,38,3,6,4,3,240,78,39,39,5,8,4,3,279,78,37,37,5,7,4,3,316,78,37,38,5,7,4,3,353,78,37,38,5,7,4,3,390,78,37,38,5,7,4,3,427,78,37,38,5,7,4,3,464,78,37,38,5,7,4,3,501,78,37,38,5,7,4,3,538,78,37,38,5,7,4,3,575,78,37,38],
			"frames": 12,
			"frames_per_row": 4,
			"id": "emote_canestomp",
			"image": "compiled-2.png",
			"interact_area": "all",
			"rect": [160,71,205,118],
			"solid_area": [10,10,27,43]
		}
	],
	"consts": {
		"can_stand": true
	},
	"editor_info": {
		"category": "NPCs",
		"var": [
			{
				"enum_values": ["face_player","random","never"],
				"name": "turning_behaviour",
				"type": "enum",
				"value": "'face_player'"
			},
			{
				"name": "default_speech_text",
				"type": "text",
				"value": ""
			},
			{
				"enum_values": ["stand"],
				"name": "start_mode",
				"type": "enum",
				"value": "'stand'"
			}
		]
	},
	"friction": 1000,
	"id": "town_elder_npc",
	"on_create": "if(start_mode, animation(start_mode), stand())",
	"on_end_emote_caneshake_anim": "animation('stand')",
	"on_end_emote_canestomp_anim": "animation('stand')",
	"on_end_emote_confused_anim": "animation('stand')",
	"on_end_emote_emphatic_anim": "animation('stand')",
	"on_end_mutter_anim": "if(vars.mutter_counter > 0, [animation('mutter'), set(mutter_counter, mutter_counter - 1)], animation('stand'))",
	"on_end_mutter_begin_anim": "[animation('mutter'), set(mutter_counter,2)]",
	"on_end_run_scared_anim": "animation('run_scared')",
	"on_end_stand_anim": "[
	[	//Legacy, to ease the transition from the turn_to_face_player variable to the turning_behaviour variable.
		if(turn_to_face_player,
			set(facing, if(level.player.x < x, -1, 1))), 
		animation('stand'),
	], 
	[	//New code. Delete the above when all instances of turn_to_face_player have been removed from the game.
		animation('stand'),
		switch(turning_behaviour,
			'face_player', set(facing, if(level.player.x < x, -1, 1)),
			'random', if(not 1d2-1, set(facing, 1d2-1)),
			/*'never',*/ null, //Uncomment this when all NPCs actually have turning_behaviour set. It should enforce the turning behaviour variable by crashing if it's not set, or set incorrectly. I believe this behaviour to be the most correct, since when errors occur it'll fail fast.
		)
	]
	]",
	"on_have_distance": "[
	set(level.player.control_lock, ['ctrl_right']), 
	schedule(2, 
		fire_event('start_talking')),
	]",
	"on_interact": "[
	set(level.zoom, 2), 
	pause(),
	set(level.player.control_lock, ['ctrl_left']), 
	
	set(level.player.tmp.running, 0), 
	schedule(20, 
		fire_event('have_distance')),
	]",
	"on_start_talking": "[
	set(level.player.control_lock, null), 
	fire_event('talk'), 
	set(level.zoom, 1),
	resume(),
	]",
	"on_talk": "if(default_speech_text, speech_dialog(self, [default_speech_text]))",
	"properties": {
		"pause": "def() [animation('stand'), set(vars.paused,1)]",
		"resume": "def() [fire_event('resume'), set(vars.paused,0)]",
		"stand": "def() animation('stand')"
	},
	"solid_area": [10,10,27,43],
	"solid_dimensions": ["npc"],
	"tmp": null,
	"variations": null,
	"vars": {
		"default_speech_text": null,
		"mutter_counter": 2,
		"paused": 0,
		"start_mode": null,
		"turning_behaviour": null
	},
	"zorder": -2
}