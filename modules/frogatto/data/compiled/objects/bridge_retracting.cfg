{
	"animation": {
		"frame_info": [0,0,1,1,668,36,16,16],
		"id": "normal",
		"image": "compiled-3.png",
		"rect": [668,36,684,52]
	},
	"editor_info": {
		"category": "platforms",
		"var": [
			{
				"name": "other_x",
				"type": "x",
				"value": "x + 100"
			},
			{
				"name": "other_y",
				"type": "y",
				"value": "y"
			},
			{
				"name": "nparts",
				"value": 5
			},
			{
				"name": "spring_constant",
				"value": 5
			}
		]
	},
	"id": "bridge_retracting",
	"object_type": [
		{
			"animation": {
				"id": "normal",
				"image": "props/spikedball.png",
				"rect": [25,2,41,18]
			},
			"id": "anchor",
			"properties": {
				"left_x": "midpoint_x"
			}
		},
		{
			"animation": {
				"h": 31,
				"id": "normal",
				"image": "props/rope.png",
				"w": 48,
				"x": 502,
				"y": 144
			},
			"consts": {
				"PART_WEIGHT": 25,
				"PLAYER_WEIGHT": 150,
				"X_ADJUST": 20
			},
			"id": "part",
			"on_process": "[
    #start comment##
        set(force_x, 0), set(force_y, 0),
        set_var('dx', (left.right_x - left_x) + (right.left_x - right_x)),
        set_var('dy', (left.y - y) - (right.y _y)),
        set_var('force', sqrt(dx^2 + dy^2)),
        if(dy > 0, set_var('angle', acos(dx*10/dy)), set_var('angle',
        TODO: trigonometric math here
    ##end comment#

        set(force_x, (left.right_x - left_x)*spring_constant + (right.left_x - right_x)*spring_constant),
        set(force_y, (left.y - y)*spring_constant + (right.y - y)*spring_constant + if(level.player.standing_on = me, PLAYER_WEIGHT, 0) + PART_WEIGHT),
        set(velocity_x, velocity_x/2 + force_x),
        set(velocity_y, velocity_y/2 + force_y)
    ]",
			"platform_area": [0,3,48,10],
			"properties": {
				"left_x": "midpoint_x - X_ADJUST",
				"right_x": "midpoint_x + X_ADJUST"
			},
			"vars": {
				"force_x": 0,
				"force_y": 0
			}
		}
	],
	"on_child_spawned": "switch(child.type,
    'bridge_retracting.anchor', [set(anchor, child), spawn('bridge_retracting.part', midpoint_x + (child.midpoint_x - midpoint_x)/2, midpoint_y + (child.midpoint_y - midpoint_y)/2, facing, [ set_var('left', me), set_var('right', child), set_var('spring_constant', spring_constant) ])],
    'bridge_retracting.part', [set(parts, parts + [child]), if(parts.size < nparts - 1, spawn('bridge_retracting.part', midpoint_x + (anchor.midpoint_x - midpoint_x)/2, midpoint_y + (anchor.midpoint_y - midpoint_y)/2, facing, [set_var('left', child), set_var('right', anchor), set_var('spring_constant', spring_constant)])), if(parts.size > 0, set(rightmost.right,child))])",
	"on_create": "spawn('bridge_retracting.anchor',other_x,other_y,facing)",
	"properties": {
		"right_x": "midpoint_x",
		"rightmost": "parts[parts.size - 1]"
	},
	"vars": {
		"anchor": null,
		"nparts": null,
		"other_x": null,
		"other_y": null,
		"parts": [],
		"spring_constant": null
	}
}