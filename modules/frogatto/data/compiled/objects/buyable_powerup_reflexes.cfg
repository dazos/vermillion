{
	"animation": [
		{
			"duration": 4,
			"frame_info": [4,0,4,0,112,993,10,18,4,0,4,0,122,993,10,18,4,2,4,2,132,993,10,14,4,2,4,3,142,993,10,13,4,4,4,4,152,993,10,10,4,3,4,2,162,993,10,13,4,2,4,2,172,993,10,14,4,0,4,0,182,993,10,18],
			"frames": 8,
			"frames_per_row": 4,
			"id": "normal",
			"image": "compiled-2.png",
			"interact_area": "all",
			"item_area": "all",
			"rect": [108,993,125,1010]
		}
	],
	"consts": {
		"description": [~The hyper crystal unlocks
hyper powerups. Hyper
powerups will heighten your
reflexes, making the world
seem to slow down around you.~],
		"max_owned": 1,
		"name": ~hyper crystal~,
		"price": 100,
		"quantity": 1
	},
	"editor_info": null,
	"id": "buyable_powerup_reflexes",
	"on_bought": "[set(level.player.vars.unlocked_items, level.player.vars.unlocked_items + ['powerup_reflexes']), set(level.player.vars.next_unlocked_item, 'powerup_reflexes')]",
	"on_buyable_item_PROTO_bought": "level.player.get_item(real_item_name,consts.quantity)",
	"on_buyable_item_PROTO_create": "[if(number_owned >= consts.max_owned, remove_object(me))]",
	"on_create": "[proto_event('buyable_item', 'create'), set(red, 0), set(blue, 0)]",
	"on_end_normal_anim": "animation('normal')",
	"on_interact": "[fire_event(level.player, 'start_interact')]",
	"on_talk": "[set(level.player.time_in_animation_delta, 0),
	         if(level.player.vars.coins < final_price,
	            [
	             paused_speech_dialog(self, consts.description + [~The price is ${final_price} coins.~, ~You don't have enough money.~]),
				],
				[
				 paused_speech_dialog(self, consts.description + [~The price is ${final_price} coins.~]),
				 paused_speech_dialog(self, [~Do you want to buy the ${consts.name}?~,
				  ~Yes~, 	[
				  		fire_event('bought'),
				  		die(),
				  		sound('coins-buy.wav'),
				  		set(level.player.vars.coins, level.player.vars.coins - final_price),
				  		spawn('text_flash_negative',midpoint_x,midpoint_y-20,1,[set_var('txt','-'+me.final_price)])
				  		],
				  'default_skip', ~No~, []])
				]),
			    set(level.player.time_in_animation_delta, 1)]",
	"properties": {
		"final_price": "consts.price * (1 + number_owned)",
		"number_owned": "level.player.number_of_item(real_item_name)",
		"real_item_name": "regex_replace(type,'buyable_','')"
	},
	"tmp": null,
	"variations": null,
	"vars": null,
	"zorder": -5
}