{
	"animation": [
		{
			"accel_x": 0,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duration": 6,
			"frame_info": [1,5,2,2,958,912,26,21],
			"frames": 1,
			"id": "stand",
			"image": "compiled-2.png",
			"rect": [957,907,985,934],
			"rotate_on_slope": true
		},
		{
			"accel_x": 750,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duplicates": 6,
			"duration": 3,
			"frame_info": [2,4,2,2,678,95,25,22,1,5,2,2,703,95,26,21,2,4,2,2,729,95,25,22],
			"frames": 3,
			"id": "run",
			"image": "compiled-0.png",
			"rect": [676,91,704,118],
			"reverse": "yes",
			"rotate_on_slope": true
		},
		{
			"accel_x": 750,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duration": 3,
			"frame_info": [2,4,2,2,754,95,25,22,1,5,2,2,779,95,26,21,2,4,2,2,805,95,25,22],
			"frames": 3,
			"id": "run",
			"image": "compiled-0.png",
			"rect": [752,91,780,118],
			"reverse": "yes",
			"rotate_on_slope": true
		},
		{
			"accel_x": 250,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duplicates": 6,
			"duration": 6,
			"frame_info": [2,4,2,2,678,95,25,22,1,5,2,2,703,95,26,21,2,4,2,2,729,95,25,22],
			"frames": 3,
			"id": "walk",
			"image": "compiled-0.png",
			"rect": [676,91,704,118],
			"reverse": "yes",
			"rotate_on_slope": true
		},
		{
			"accel_x": 250,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duration": 6,
			"frame_info": [2,4,2,2,754,95,25,22,1,5,2,2,779,95,26,21,2,4,2,2,805,95,25,22],
			"frames": 3,
			"id": "walk",
			"image": "compiled-0.png",
			"rect": [752,91,780,118],
			"reverse": "yes",
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duration": 4,
			"frame_info": [1,9,2,2,414,18,26,17],
			"frames": 1,
			"id": "spring",
			"image": "compiled-3.png",
			"rect": [413,9,441,36],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"attack_area": [0,18,26,26],
			"body_area": "all",
			"duration": 4,
			"frame_info": [2,5,1,2,595,912,26,21,0,5,0,2,621,912,29,21,1,5,2,2,650,912,26,21],
			"frames": 3,
			"id": "turn",
			"image": "compiled-2.png",
			"rect": [593,907,621,934],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duration": 18,
			"frame_info": [1,2,2,2,271,817,26,24],
			"frames": 1,
			"id": "hurt",
			"image": "compiled-2.png",
			"rect": [270,815,298,842],
			"rotate_on_slope": true
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duration": 2,
			"frame_info": [22,22,23,2,377,822,26,21,21,22,21,2,403,822,29,21,22,23,22,2,432,822,27,20,19,21,19,2,459,822,33,22,6,10,6,2,492,822,59,33,3,5,3,2,551,822,65,38,0,1,0,1,616,822,71,43,3,5,3,2,687,822,65,38],
			"frames": 8,
			"frames_per_row": 4,
			"id": "attack",
			"image": "compiled-1.png",
			"rect": [355,800,425,844],
			"rotate_on_slope": true,
			"solid_area": [26,27,41,42]
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duration": 6,
			"frame_info": [3,5,3,2,944,78,65,38],
			"frames": 1,
			"id": "attack_hold",
			"image": "compiled-2.png",
			"rect": [941,73,1011,117],
			"rotate_on_slope": true,
			"solid_area": [26,27,41,42]
		},
		{
			"accel_x": 0,
			"accel_y": 80,
			"attack_area": "all",
			"body_area": "all",
			"duration": 2,
			"frame_info": [22,22,23,2,377,822,26,21,21,22,21,2,403,822,29,21,22,23,22,2,432,822,27,20,19,21,19,2,459,822,33,22,6,10,6,2,492,822,59,33,3,5,3,2,551,822,65,38,0,1,0,1,616,822,71,43,3,5,3,2,687,822,65,38],
			"frames": 8,
			"frames_per_row": 4,
			"id": "attack_retract",
			"image": "compiled-1.png",
			"play_backwards": "yes",
			"rect": [355,800,425,844],
			"rotate_on_slope": true,
			"solid_area": [26,27,41,42]
		}
	],
	"collide_dimensions": ["common"],
	"consts": {
		"basic_type": "red_spikebug",
		"bounce_roundness": 70,
		"frogourmet_tag": "red_spikebug",
		"size": 32,
		"solid_dimensions": ["enemy","common"],
		"spring_amount": 0,
		"springiness": 0,
		"thrown_type": "red_spikebug.thrown"
	},
	"editor_info": {
		"category": "enemies, cave"
	},
	"friction": 1000,
	"hitpoints": 50,
	"id": "red_spikebug",
	"mass": 5,
	"object_type": {
		"animation": [
			{
				"body_area": null,
				"duration": 60,
				"frames": 1,
				"id": "thrown",
				"image": "enemies/spike-bug.png",
				"rect": [34,34,62,61],
				"thrown_area": "all"
			},
			{
				"body_area": "all",
				"duration": 5,
				"frames": 2,
				"id": "on_back",
				"image": "enemies/spike-bug.png",
				"rect": [34,34,62,61]
			}
		],
		"consts": {
			"basic_type": "red_spikebug",
			"frogourmet_tag": "red_spikebug",
			"thrown_type": "red_spikebug.thrown"
		},
		"id": "thrown",
		"prototype": ["throwable_small_enemy"],
		"solid_dimensions": ["common","enemy"]
	},
	"on_add_object_fail": "[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]",
	"on_bounced_on": "[sound('bug-bounce.wav'),animation('spring')]",
	"on_change_animation_failure": "fire_event('solidity_fail')",
	"on_change_solid_dimensions_fail": "fire_event('solidity_fail')",
	"on_collide_feet": "animation('walk')",
	"on_collide_head": "set(velocity_y, -velocity_y/2)",
	"on_collide_object_body": "if(collide_with.team != team and collide_with.team != 'evil_harmless' and (not (collide_with.team = 'evil' and team = 'evil_harmless')), if(collide_with_area in ['attack','thrown'], get_hit_by(collide_with)))",
	"on_collide_side": "if(not (animation in ['hurt']), [set(facing, -facing), animation('turn'), set(velocity_x,0)])",
	"on_die": "[score(level,points_value), spawn_item(self), death_burst_tracked(self)]",
	"on_end_anim": null,
	"on_end_attack_anim": "animation('attack_hold')",
	"on_end_attack_hold_anim": "if(player_within(60),animation('attack_hold'),[animation('attack_retract'),sound('spikebug-retract'+1d4+'.wav')])",
	"on_end_attack_retract_anim": "animation('stand')",
	"on_end_hurt_anim": "animation('walk')",
	"on_end_run_anim": "if(player_within(90),[animation('attack'),sound('spikebug-extrude'+1d3+'.wav')],walk_or_run())",
	"on_end_stand_anim": "walk_or_run()",
	"on_end_turn_anim": "animation('walk')",
	"on_end_walk_anim": "walk_or_run()",
	"on_enter_walk_anim": "if(not is_standing, animation('stand'))",
	"on_enter_water": "die()",
	"on_jumped_on": "[if(jumped_on_by.mass >= 20, die())]",
	"on_outside_level": "[if(y > level.dimensions[3], add(hitpoints,-1))]",
	"on_process_stand": "if(is_standing, animation('walk'))",
	"on_solidity_fail": "if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me),
			   set(tmp.in_solidity_fail, 0)
			  ])",
	"on_stomped_on": "[add(hitpoints, -3), set(green, 100), set(blue, 100),
	                schedule(4, [set(green, 255), set(blue, 255)])]",
	"on_stuck": "if(not solid(level, midpoint_x, y+self.img_h-10), add(velocity_y, -1200), add(velocity_x, 1d600-300))",
	"on_surface_damage": "die()",
	"on_timer": "[set(rotate, slope_standing_on), if(is_standing and animation in ['walk','run'] and (should_turn_away_from_cliff or should_turn_towards_player),turn_around(),null)]",
	"properties": {
		"ant_attack_damage": "if(not underwater, if(higher_difficulty, 2, 1))",
		"ant_turns_at_cliffs": 1,
		"ant_turns_towards_player": "if(level.player.difficulty >= level.player.difficulty_challenging, 1, 0)",
		"attack_damage": "if(level.player.difficulty < level.player.difficulty_challenging, 2, 4)",
		"attack_knockback": 0,
		"cause_flinch": "def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			cause_hurt_anim(collide_with)
			])",
		"cause_hurt_anim": "def(collide_with) execute(me, if('hurt' in available_animations,set(me.animation, 'hurt')))",
		"damage_cooldown": 0,
		"display_hurt_visuals": "def() execute(me, 
					[
					hurt_flash_sequence()
					])",
		"display_posthit_invincibility_flash_sequence": "def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )",
		"distance_to_cliff_check": "max(30, abs(velocity_x/7))",
		"facing_towards_player": "facing = if(level.player.midpoint_x < self.midpoint_x, -1, 1)",
		"flash_bright": "def() [set(me.brightness, 1023)]",
		"flash_off": "def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]",
		"flash_red": "def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]",
		"flinch_threshold": 3,
		"get_hit_by": "def(collide_with) execute(me, [
						handle_special_damage_response(collide_with),
	
						if((not is_invincible) and (collide_with.attack_damage > 0) and collide_with.hitpoints > 0 and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])",
		"handle_damage": "def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))",
		"handle_damage_type": "def(collide_with)
						if(collide_with.damage_type = 'stun', if(consts.thrown_type, [add(velocity_y,hurt_velocity_y), set(type, consts.thrown_type), animation('on_back')] ))",
		"handle_flinch": "def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))",
		"handle_knockback": "def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))",
		"handle_special_damage_response": "def(collide_with) null #virtual#",
		"higher_difficulty": "level.player.difficulty > level.player.difficulty_casual",
		"hittable_attack_damage": 0,
		"hittable_handle_damage_type": "def(collide_with) null #virtual#",
		"hittable_hurt_velocity_x": -200,
		"hittable_hurt_velocity_y": -400,
		"hurt_flash_sequence": "def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]",
		"hurt_velocity_x": 200,
		"hurt_velocity_y": -400,
		"is_invincible": "if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)",
		"is_invincible_posthit": "if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)",
		"lower_difficulty": "level.player.difficulty < level.player.difficulty_challenging",
		"player_within": "def(distance) if((level.player.midpoint_x > midpoint_x - distance) and (level.player.midpoint_x < midpoint_x + distance) and (level.player.midpoint_y > midpoint_y - distance) and (level.player.midpoint_y < midpoint_y + distance), 1, 0)",
		"should_turn_away_from_cliff": "(turns_at_cliffs and distance_to_cliff < distance_to_cliff_check)",
		"should_turn_towards_player": "(not facing_towards_player) and if(turns_towards_player and if(turns_towards_player_x_threshold,(turns_towards_player_x_threshold > x_distance_to_player),0), 1, 0)",
		"standard_thrown_damage": 400,
		"team": "'evil'",
		"turn_around": "def() if((should_turn_away_from_cliff) or (not turned_to_face_player_too_recently), [set(facing, -facing),animation('turn'), set(vars.last_turned,level.cycle)]) where turned_to_face_player_too_recently = abs(level.cycle - vars.last_turned) < turns_towards_player_delay",
		"turns_at_cliffs": 1,
		"turns_towards_player": 1,
		"turns_towards_player_delay": 200,
		"turns_towards_player_x_threshold": 250,
		"walk_or_run": "def() if(player_within(200),animation('run'),animation('walk'))",
		"x_distance_to_player": "abs(mid_x - level.player.mid_x)",
		"y_distance_to_player": "abs(mid_y - level.player.mid_y)"
	},
	"solid_area": [5,10,20,25],
	"solid_dimensions": ["enemy","common"],
	"tags": "swallowable",
	"timer_frequency": 2,
	"tmp": null,
	"traction": 1000,
	"variations": null,
	"vars": {
		"last_turned": 0,
		"points_value": 9
	}
}