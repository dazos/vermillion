{
	"animation": [
		{
			"duration": 1,
			"frame_info": [2,3,3,1,750,81,13,14,5,3,5,1,763,81,8,14,5,4,5,2,771,81,8,12,3,5,5,3,779,81,10,10,2,5,2,5,789,81,14,8,1,5,1,4,803,81,16,9,2,3,3,1,819,81,13,14,4,2,4,2,832,81,10,14,5,1,2,4,842,81,11,13,5,1,1,5,853,81,12,12,5,1,1,4,865,81,12,13,3,3,2,2,877,81,13,13],
			"frames": 12,
			"frames_per_row": 6,
			"id": "normal",
			"image": "compiled-0.png",
			"interact_area": "all",
			"item_area": "all",
			"rect": [748,78,765,95]
		}
	],
	"consts": {
		"description": [~The energy crystal unlocks
energy powerups. Energy
powerups will allow you
to shoot bolts of energy.~],
		"max_owned": 1,
		"name": ~energy crystal~,
		"price": 100,
		"quantity": 1
	},
	"editor_info": null,
	"id": "buyable_powerup_shooting",
	"on_bought": "[set(level.player.vars.unlocked_items, level.player.vars.unlocked_items + ['powerup_shooting']), set(level.player.vars.next_unlocked_item, 'powerup_shooting')]",
	"on_buyable_item_PROTO_bought": "level.player.get_item(real_item_name,consts.quantity)",
	"on_buyable_item_PROTO_create": "[if(number_owned >= consts.max_owned, remove_object(me))]",
	"on_create": "[proto_event('buyable_item', 'create'), set(green, 0), set(blue, 0)]",
	"on_end_normal_anim": "animation('normal')",
	"on_interact": "[fire_event(level.player, 'start_interact')]",
	"on_talk": "[set(level.player.time_in_animation_delta, 0),
	         if(level.player.vars.coins < final_price,
	            [
	             paused_speech_dialog(self, consts.description + [~The price is ${final_price} coins.~, ~You don't have enough money.~]),
				],
				[
				 paused_speech_dialog(self, consts.description + [~The price is ${final_price} coins.~]),
				 paused_speech_dialog(self, [~Do you want to buy the ${consts.name}?~,
				  ~Yes~, 	[
				  		fire_event('bought'),
				  		die(),
				  		sound('coins-buy.wav'),
				  		set(level.player.vars.coins, level.player.vars.coins - final_price),
				  		spawn('text_flash_negative',midpoint_x,midpoint_y-20,1,[set_var('txt','-'+me.final_price)])
				  		],
				  'default_skip', ~No~, []])
				]),
			    set(level.player.time_in_animation_delta, 1)]",
	"properties": {
		"final_price": "consts.price * (1 + number_owned)",
		"number_owned": "level.player.number_of_item(real_item_name)",
		"real_item_name": "regex_replace(type,'buyable_','')"
	},
	"tmp": null,
	"variations": null,
	"vars": null,
	"zorder": -5
}