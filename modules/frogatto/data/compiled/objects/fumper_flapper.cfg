{
	"animation": [
		{
			"accel_y": 50,
			"attack_area": "all",
			"body_area": "all",
			"duplicates": 4,
			"duration": 5,
			"frame_info": [1,3,1,2,687,792,29,25,1,4,2,2,716,792,28,24,1,5,3,2,744,792,27,23],
			"frames": 3,
			"id": "stand",
			"image": "compiled-2.png",
			"rect": [686,789,716,818],
			"reverse": true
		},
		{
			"accel_y": 50,
			"attack_area": "all",
			"body_area": "all",
			"duration": 5,
			"frame_info": [0,9,2,2,465,954,29,19],
			"frames": 1,
			"id": "start_jump",
			"image": "compiled-2.png",
			"rect": [465,945,495,974]
		},
		{
			"accel_y": 50,
			"attack_area": "all",
			"body_area": "all",
			"duration": 2,
			"frame_info": [0,1,2,1,828,603,29,28,0,1,2,1,857,603,29,28],
			"frames": 2,
			"id": "jump",
			"image": "compiled-2.png",
			"rect": [828,602,858,631]
		},
		{
			"accel_y": 50,
			"attack_area": "all",
			"body_area": "all",
			"duration": 2,
			"frame_info": [0,2,2,1,841,659,29,27,0,2,2,1,870,659,29,27],
			"frames": 2,
			"id": "fall",
			"image": "compiled-2.png",
			"rect": [841,657,871,686]
		},
		{
			"accel_y": 50,
			"attack_area": "all",
			"body_area": "all",
			"duration": 5,
			"frame_info": [0,9,2,2,465,954,29,19],
			"frames": 1,
			"id": "land",
			"image": "compiled-2.png",
			"rect": [465,945,495,974]
		},
		{
			"accel_y": 50,
			"attack_area": "all",
			"body_area": "all",
			"duration": 5,
			"frame_info": [5,4,3,2,297,817,23,24,5,4,5,2,320,817,21,24,3,4,5,2,341,817,23,24],
			"frames": 3,
			"id": "turn",
			"image": "compiled-2.png",
			"rect": [292,813,322,842]
		},
		{
			"accel_y": 50,
			"attack_area": "all",
			"body_area": "all",
			"duration": 18,
			"frame_info": [0,2,2,1,980,659,29,27],
			"frames": 1,
			"id": "hurt",
			"image": "compiled-2.png",
			"rect": [980,657,1010,686]
		}
	],
	"consts": {
		"basic_type": "fumper_flapper",
		"frogourmet_tag": "fumper_flapper",
		"jump_power": 2000
	},
	"editor_info": {
		"category": "enemies, general"
	},
	"feet_width": 4,
	"friction": 1000,
	"goes_inactive_only_when_standing": true,
	"hitpoints": 200,
	"id": "fumper_flapper",
	"mass": 5,
	"on_add_object_fail": "[if(collide_with.team != team and collide_with.get_hit_by, collide_with.get_hit_by(me)), die()]",
	"on_change_animation_failure": "fire_event('solidity_fail')",
	"on_change_solid_dimensions_fail": "fire_event('solidity_fail')",
	"on_collide_feet": "if(animation in ['jump', 'fall'], [animation('land'), set(velocity_x, 0)])",
	"on_collide_head": "set(velocity_y, 0)",
	"on_collide_object_body": "if(collide_with.team != team and collide_with.team != 'evil_harmless' and (not (collide_with.team = 'evil' and team = 'evil_harmless')), if(collide_with_area in ['attack','thrown'], get_hit_by(collide_with)))",
	"on_die": "[score(level,points_value), spawn_item(self), death_burst_tracked(self)]",
	"on_end_fall_anim": "if(is_standing, animation('stand'), animation('fall'))",
	"on_end_hurt_anim": "animation('stand')",
	"on_end_jump_anim": "if(is_standing, animation('stand'), animation('jump'))",
	"on_end_land_anim": "animation('stand')",
	"on_end_stand_anim": "if(desired_facing = facing and is_standing, animation('start_jump'), animation('turn'))
                         where desired_facing = if(level.player.x < x, -1, 1)",
	"on_end_start_jump_anim": "[animation('jump'),
				if(level.player.facing = facing and level.player.difficulty >= level.player.difficulty_challenging,
					[set(velocity_x,700*facing),set(velocity_y,-consts.jump_power*0.75)],
					[set(velocity_x,400*facing),set(velocity_y,-consts.jump_power)])]",
	"on_end_turn_anim": "[set(facing, if(level.player.x < x, -1, 1)), animation('stand')]",
	"on_enter_water": "die()",
	"on_outside_level": "[if(y > level.dimensions[3], add(hitpoints,-1))]",
	"on_process_jump": "if(velocity_y > 0, animation('fall'))",
	"on_solidity_fail": "if(tmp.in_solidity_fail, die(),
	          [set(tmp.in_solidity_fail, 1),
			   resolve_solid(me),
			   set(tmp.in_solidity_fail, 0)
			  ])",
	"on_surface_damage": "die()",
	"on_timer": "set(tmp, 'already_hit', [])",
	"properties": {
		"attack_damage": 2,
		"attack_knockback": 0,
		"cause_flinch": "def(collide_with) execute(me, [
			add(me.velocity_x,me.hurt_velocity_x * sign(collide_with.midpoint_x - me.midpoint_x)), 
			add(me.velocity_y,me.hurt_velocity_y),
			cause_hurt_anim(collide_with)
			])",
		"cause_hurt_anim": "def(collide_with) execute(me, if('hurt' in available_animations,set(me.animation, 'hurt')))",
		"damage_cooldown": 0,
		"display_hurt_visuals": "def() execute(me, 
					[
					hurt_flash_sequence()
					])",
		"display_posthit_invincibility_flash_sequence": "def() if(consts.posthit_invicibility_period, 
			map(range(consts.posthit_invicibility_period/2), 'step' ,schedule(step*2, if(step%2=0,set(alpha,50),set(alpha,255))  ) ) )",
		"flash_bright": "def() [set(me.brightness, 1023)]",
		"flash_off": "def() [set(me.brightness, 255),set(me.red, 255),set(me.green, 255), set(me.blue, 255)]",
		"flash_red": "def() [set(me.red, 255),set(me.green, 100), set(me.blue, 100)]",
		"flinch_threshold": 40,
		"get_hit_by": "def(collide_with) execute(me, [
						handle_special_damage_response(collide_with),
	
						if((not is_invincible) and (collide_with.attack_damage > 0) and collide_with.hitpoints > 0 and (collide_with.attack_damage >= armor) and (collide_with.damage_cooldown < (cycle - vars.time_last_hit)),
								[display_hurt_visuals(),
								display_posthit_invincibility_flash_sequence(),
								handle_flinch(collide_with),
								handle_damage(collide_with),
								set(vars.time_last_hit, me.cycle)]),
						
						handle_damage_type(collide_with),
						handle_knockback(collide_with)])",
		"handle_damage": "def(collide_with) execute(me,add(me.hitpoints, - collide_with.attack_damage))",
		"handle_damage_type": "def(collide_with) null #virtual#",
		"handle_flinch": "def(collide_with) 
			execute(me, if(collide_with.attack_damage >= flinch_threshold, cause_flinch(collide_with)))",
		"handle_knockback": "def(collide_with) execute(me,add(velocity_x, collide_with.facing * collide_with.attack_knockback))",
		"handle_special_damage_response": "def(collide_with) null #virtual#",
		"higher_difficulty": "level.player.difficulty > level.player.difficulty_casual",
		"hittable_attack_damage": 0,
		"hittable_flinch_threshold": 3,
		"hurt_flash_sequence": "def()	[	flash_bright(),
									schedule(3, flash_red()),
									schedule(6, flash_bright()),
									schedule(9, flash_red()),
									schedule(12, flash_bright()),
									schedule(15, flash_off())]",
		"hurt_velocity_x": -200,
		"hurt_velocity_y": -400,
		"is_invincible": "if(invincible or level.in_dialog or is_invincible_posthit, 1, 0)",
		"is_invincible_posthit": "if(vars.time_last_hit and (abs(vars.time_last_hit - me.cycle) < consts.posthit_invicibility_period), 1, 0)",
		"lower_difficulty": "level.player.difficulty < level.player.difficulty_challenging",
		"standard_thrown_damage": 400,
		"team": "'evil'"
	},
	"solid_area": [5,5,28,28],
	"solid_dimensions": ["enemy","common"],
	"timer_frequency": 100,
	"tmp": null,
	"traction": 1000,
	"variations": null,
	"vars": {
		"points_value": 14,
		"turns_at_cliffs": 1
	}
}